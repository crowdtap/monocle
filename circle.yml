machine:
  timezone:
    America/New_York
  services:
    - docker
  environment:
    RAILS_ENV: test
    PATH: $PATH:node_modules/.bin
    EXTERNAL_REGISTRY_BASE_DOMAIN: 535700620794.dkr.ecr.us-east-1.amazonaws.com
    REPOSITORY_NAME: monocle
    REGISTRY_EMAIL: none
    REGISTRY_USERNAME: AWS
    AWS_DEFAULT_REGION: us-east-1

    CI_SHA1: $CIRCLE_SHA1
    CI_BRANCH: $CIRCLE_BRANCH
    CI_BUILD_NUM: $CIRCLE_BUILD_NUM

    DOCKERTAG: monocle
    SERVICENAME: monocle

    # for nginx sidecar
    DOCKERTAG_NGINX: monocle-nginx

dependencies:
  pre:
    - gem install bundler
    - npm install
    - docker-pull
    - bundle install --path .localgems
    - docker build --rm=false -t ${DOCKERTAG}:latest .
    - docker build --rm=false -t ${DOCKERTAG_NGINX}:latest deploy/nginx-sidecar

deployment:
  staging:
    branch: staging
    commands:
      # nginx sidecar
      - docker tag -f "${DOCKERTAG_NGINX}:latest" "${EXTERNAL_REGISTRY_BASE_DOMAIN}/${DOCKERTAG_NGINX}:${CI_SHA1}"
      - docker push "${EXTERNAL_REGISTRY_BASE_DOMAIN}/${DOCKERTAG_NGINX}:${CI_SHA1}"
      # the app
      - docker-push -f deploy/staging.config
      - ensure-kubectl
      - prepare-kubectl
      - kubectl config use-context staging
      - k8s-deploy -f deploy/staging.config
  production:
    branch: production
    commands:
      # nginx sidecar
      - docker tag -f "${DOCKERTAG_NGINX}:latest" "${EXTERNAL_REGISTRY_BASE_DOMAIN}/${DOCKERTAG_NGINX}:${CI_SHA1}"
      - docker push "${EXTERNAL_REGISTRY_BASE_DOMAIN}/${DOCKERTAG_NGINX}:${CI_SHA1}"
      # the app
      - docker-push -f deploy/production.config
      - ensure-kubectl
      - prepare-kubectl
      - kubectl config use-context production
      - k8s-deploy -f deploy/production.config
