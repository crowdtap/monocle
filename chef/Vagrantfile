# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.5.0"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  config.vm.hostname = "monocle-berkshelf"

  # Set the version of chef to install using the vagrant-omnibus plugin
  config.omnibus.chef_version = :latest

  # Every Vagrant virtual environment requires a box to build off of.
  # If this value is a shorthand to a box in Vagrant Cloud then 
  # config.vm.box_url doesn't need to be specified.
  config.vm.box = "chef/ubuntu-14.04"

  # The url from where the 'config.vm.box' box will be fetched if it
  # is not a Vagrant Cloud box and if it doesn't already exist on the 
  # user's system.
  # config.vm.box_url = "https://vagrantcloud.com/chef/ubuntu-14.04/version/1/provider/virtualbox.box"

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :private_network, type: "dhcp"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:

  config.vm.provider :virtualbox do |vb|
    vb.auto_nat_dns_proxy = false
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "off" ]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "off" ]
  end
  #
  # View the documentation for the provider you're using for more
  # information on available options.

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  # The path to the Berksfile to use with Vagrant Berkshelf
  # config.berkshelf.berksfile_path = "./Berksfile"

  # Enabling the Berkshelf plugin. To enable this globally, add this configuration
  # option to your ~/.vagrant.d/Vagrantfile file
  config.berkshelf.enabled = true

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to exclusively install and copy to Vagrant's shelf.
  # config.berkshelf.only = []

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to skip installing and copying to Vagrant's shelf.
  # config.berkshelf.except = []

  config.vm.provision :shell, inline: "test -e /opt/chef/embedded/lib/ruby/gems/1.9.1/gems/chef-sugar-2.1.0 || /opt/chef/embedded/bin/gem install --no-ri --no-rdoc chef-sugar"

  config.vm.provision :chef_solo do |chef|
    chef.json = {
      authorization: {
        sudo: {
          users: %w[vagrant deploy]
        }
      },
      deploy_roles: ['vagrant-chef-test'],
      newrelic: {
        app_name: 'Not Test Application'
      },
      rubies: ['2.1.2-github1'],

      :fiance => {
        :url => 'http://fiance.local'
      },
      :monocle => {
        :url => '//monocle.local'
      },
      :promiscuous => {
        :amqp_url => 'amqp://guest:guest@rabbit.local:5672',
        :redis_url => 'redis://redis.local:6379'
      },
      :redis => {
        :url => 'redis://redis.local:6379'
      },
      :sidekiq => {
        :redis_url => 'redis://redis.local:6379'
      },
      :sniper => {
        :url => 'http://sniper.local',
        :notification_url => 'http://sniper-bg.local'
      },
      :waldo => {
        :url => 'http://waldo.local'
      }
    }

    chef.run_list = [
      "recipe[monocle::default]"
    ]
  end
end
